#pragma once

#include <algorithm>
#include <cassert>
#include <cstdio>
#include <cstdlib>
#include <ctime>
#include <iostream>
#include <fstream>
#include <map>
#include <set>
#include <sstream>


#include "TSUtils.h"


// #define NUM_WORDS 20000
// #define WORD_SIZE 8
// #define CARDINALITY 8
// #define MASK_SIZE 7
// #define ITERATIONS 7

typedef unsigned char uchar;
typedef unsigned int uint;

struct CudaWord 
{
	uchar values[WORD_SIZE];
};


uchar h_collisionTable [ NUM_WORDS * NUM_WORDS ];
uchar h_cols [ MASK_SIZE * ITERATIONS ];
CudaWord h_words [ NUM_WORDS ];

class SAX
{
public:

	SAX(void)
	{
	}

	~SAX(void)
	{
	}


	static void devAddWord(const std::vector<double> &ad, int index) {
		CudaWord word;
		std::vector<int> ai = timeseries2symbol(ad, ad.size(), WORD_SIZE, CARDINALITY, false);

		for(int i = 0; i < WORD_SIZE; i++)
			word.values[i] = ai[i];

		h_words[index] = word;
	}


	static void loadData(std::string datafilepath) {
		std::ifstream ifs  (datafilepath.c_str()); 
		std::string line;

		for (int i = 0; i < NUM_WORDS ; i++) {
			getline(ifs, line);
			std::vector<double> ts;
			double value;
			std::stringstream ss (line);
			while ( ss >> value)
				ts.push_back(value);
			devAddWord(ts, i);		
		}
	}


	static std::vector<int> timeseries2symbol(const std::vector<double>& ad, int i, int j, int k, bool flag) {
		assert(k <= 64); 
		std::vector<double> ad1 = convert_to_PAA(ad, i, j);
		std::vector<int> ai = map_to_string(ad1, k);
		return ai;
	}


	static std::vector<double> convert_to_PAA(const std::vector<double> &ad, int i, int j) {
		int k = i % j;
		if (k == 0) {
			k = i;
		} else {
			k = (i / j + 1) * j;
		}
		std::vector<double> znorm = TSUtils::znormalize(ad, 0);
		std::vector<double>  ad1(j);
		int l = znorm.size() / j;
		for (int i1 = 0; i1 < j; i1++) {
			int j1 = i1 * l;
			double d = TSUtils::mean(znorm, j1, j1 + l);
			ad1[i1] = d;
		}
		return ad1;
	}

private:
	static std::vector<int> init (const std::vector<double>&  ad, double ad1[], int ad1_size) {
		std::vector<int> ai1 ( ad.size() );
		for (int j = 0; j < ad.size(); j++) {
			int k;
			for (k = 0; k < ad1_size && ad1[k] <= ad[j]; k++) {
			}
			ai1[j] = k - 1;
		}
		return ai1;
	}



	static std::vector<int>  map_to_string(const std::vector<double>&  ad, int i) {
		static double ad2[] = { (-1.0f / 0.0001f), 0.0f };
		static double ad3[] = { (-1.0f / 0.0001f), -0.42999999999999999f, 0.42999999999999999f };
		static double ad4[] = { (-1.0f / 0.0001f), -0.67000000000000004f, 0.0f, 0.67000000000000004f };
		static double ad5[] = { (-1.0f / 0.0001f), -0.83999999999999997f, -0.25f, 0.25f, 0.83999999999999997f };
		static double ad6[] = { (-1.0f / 0.0001f), -0.96999999999999997f, -0.42999999999999999f, 0.0f, 0.42999999999999999f, 0.96999999999999997f };
		static double ad7[] = { (-1.0f / 0.0001f), -1.0700000000000001f, -0.56999999999999995f, -0.17999999999999999f, 0.17999999999999999f, 0.56999999999999995f, 1.0700000000000001f };
		static double ad8[] = { (-1.0f / 0.0001f), -1.1499999999999999f, -0.67000000000000004f, -0.32000000000000001f, 0.0f, 0.32000000000000001f, 0.67000000000000004f, 1.1499999999999999f };
		static double ad9[] = { (-1.0f / 0.0001f), -1.22f, -0.76000000000000001f, -0.42999999999999999f, -0.14000000000000001f, 0.14000000000000001f, 0.42999999999999999f, 0.76000000000000001f, 1.22f };
		static double ad10[] = { (-1.0f / 0.0001f), -1.28f, -0.83999999999999997f, -0.52000000000000002f, -0.25f, 0.0f, 0.25f, 0.52000000000000002f, 0.83999999999999997f, 1.28f };
		static double ad11[] = { (-1.0f / 0.0001f), -1.3400000000000001f, -0.91000000000000003f, -0.59999999999999998f, -0.34999999999999998f, -0.11f, 0.11f, 0.34999999999999998f, 0.59999999999999998f, 0.91000000000000003f, 1.3400000000000001f };
		static double ad12[] = { (-1.0f / 0.0001f), -1.38f, -0.96999999999999997f, -0.67000000000000004f, -0.42999999999999999f, -0.20999999999999999f, 0.0f, 0.20999999999999999f, 0.42999999999999999f, 0.67000000000000004f, 0.96999999999999997f, 1.3799999999999999f };
		static double ad13[] = { (-1.0f / 0.0001f), -1.4299999999999999f, -1.02f, -0.73999999999999999f, -0.5f, -0.39000000000000001f, -0.10000000000000001f, 0.10000000000000001f, 0.39000000000000001f, 0.5f, 0.73999999999999999f, 1.02f, 1.4299999999999999f };
		static double ad14[] = { (-1.0f / 0.0001f), -1.47f, -1.0700000000000001f, -0.79000000000000004f, -0.56999999999999995f, -0.37f, -0.17999999999999999f, 0.0f, 0.17999999999999999f, 0.37f, 0.56999999999999995f, 0.79000000000000004f, 1.0700000000000001f, 1.47f };
		static double ad15[] = { (-1.0f / 0.0001f), -1.5f, -1.1100000000000001f, -0.83999999999999997f, -0.62f, -0.42999999999999999f, -0.25f, -0.080000000000000002f, -0.080000000000000002f, 0.25f, 0.42999999999999999f, 0.62f, 0.83999999999999997f, 1.1100000000000001f, 1.5f };
		static double ad16[] = { (-1.0f / 0.0001f), -1.53f, -1.1499999999999999f, -0.89000000000000001f, -0.67000000000000004f, -0.48999999999999999f, -0.32000000000000001f, -0.16f, 0.0f, 0.16f, 0.32000000000000001f, 0.48999999999999999f, 0.67000000000000004f, 0.89000000000000001f, 1.1499999999999999f, 1.53f };
		static double ad17[] = { (-1.0f / 0.0001f), -1.5600000000000001f, -1.1899999999999999f, -0.93000000000000005f, -0.71999999999999997f, -0.54000000000000004f, -0.38f, -0.22f, -0.070000000000000007f, 0.070000000000000007f, 0.22f, 0.38f, 0.54000000000000004f, 0.71999999999999997f, 0.93000000000000005f, 1.1899999999999999f, 1.5600000000000001f };
		static double ad18[] = { (-1.0f / 0.0001f), -1.5900000000000001f, -1.22f, -0.96999999999999997f, -0.76000000000000001f, -0.58999999999999997f, -0.42999999999999999f, -0.28000000000000003f, -0.14000000000000001f, 0.0f, 0.14000000000000001f, 0.28000000000000003f, 0.42999999999999999f, 0.58999999999999997f, 0.76000000000000001f, 0.96999999999999997f, 1.22f, 1.5900000000000001f };
		static double ad19[] = { (-1.0f / 0.0001f), -1.6200000000000001f, -1.25f, -1.0f, -0.80000000000000004f, -0.63f, -0.47999999999999998f, -0.34000000000000002f, -0.20000000000000001f, -0.070000000000000007f, 0.070000000000000007f, 0.20000000000000001f, 0.34000000000000002f, 0.47999999999999998f, 0.63f, 0.80000000000000004f, 1.0f, 1.25f, 1.6200000000000001f };
		static double ad20[] = { (-1.0f / 0.0001f), -1.6399999999999999f, -1.28f, -1.04f, -0.83999999999999997f, -0.67000000000000004f, -0.52000000000000002f, -0.39000000000000001f, -0.25f, -0.13f, 0.0f, 0.13f, 0.25f, 0.39000000000000001f, 0.52000000000000002f, 0.39000000000000001f, 0.52000000000000002f, 0.67000000000000004f, 0.83999999999999997f, 1.04f, 1.28f, 1.6399999999999999f };
		static double ad21[] = { (-1.0f / 0.0001f), -1.6699999999999999f, -1.3100000000000001f, -1.0700000000000001f, -0.88f, -0.71999999999999997f, -0.56999999999999995f, -0.44f, -0.31f, -0.19f, -0.059999999999999998f, 0.050000000000000003f, 0.17999999999999999f, 0.29999999999999999f, 0.42999999999999999f, 0.56000000000000005f, 0.70999999999999996f, 0.87f, 1.0600000000000001f, 1.3f, 1.6599999999999999f };
		static double ad22[] = { (-1.0f / 0.0001f), -1.7f, -1.3400000000000001f, -1.1000000000000001f, -0.91000000000000003f, -0.75f, -0.60999999999999999f, -0.47999999999999998f, -0.34999999999999998f, -0.23000000000000001f, -0.12f, 0.0f, 0.11f, 0.22f, 0.34000000000000002f, 0.46999999999999997f, 0.59999999999999998f, 0.73999999999999999f, 0.90000000000000002f, 1.0900000000000001f, 1.3300000000000001f };
		static double ad23[] = { (-1.0f / 0.0001f), -1.72f, -1.3600000000000001f, -1.1299999999999999f, -0.93999999999999995f, -0.79000000000000004f, -0.65000000000000002f, -0.52000000000000002f, -0.40000000000000002f, -0.28000000000000003f, -0.17000000000000001f, -0.059999999999999998f, 0.050000000000000003f, 0.16f, 0.27000000000000002f, 0.39000000000000001f, 0.51000000000000001f, 0.64000000000000001f, 0.78000000000000003f, 0.93000000000000005f, 1.1200000000000001f, 1.3500000000000001f, 1.71f };
		static double ad24[] = { (-1.0f / 0.0001f), -1.74f, -1.3899999999999999f, -1.1599999999999999f, -0.96999999999999997f, -0.81999999999999995f, -0.68000000000000005f, -0.55000000000000004f, -0.44f, -0.32000000000000001f, -0.22f, -0.11f, -0.01f, 0.10000000000000001f, 0.20999999999999999f, 0.31f, 0.42999999999999999f, 0.54000000000000004f, 0.67000000000000004f, 0.81000000000000005f, 0.95999999999999996f, 1.1499999999999999f, 1.3799999999999999f, 1.73f };
		static double ad25[] = { (-1.0f / 0.0001f), -1.76f, -1.4099999999999999f, -1.1799999999999999f, -1.0f, -0.84999999999999998f, -0.70999999999999996f, -0.58999999999999997f, -0.46999999999999997f, -0.35999999999999999f, -0.26000000000000001f, -0.16f, -0.059999999999999998f, 0.050000000000000003f, 0.14999999999999999f, 0.25f, 0.34999999999999998f, 0.46000000000000002f, 0.57999999999999996f, 0.69999999999999996f, 0.83999999999999997f, 0.98999999999999999f, 1.1699999999999999f, 1.3999999999999999f, 1.75f };
		static double ad26[] = { (-1.0f / 0.0001f), -1.77f, -1.4299999999999999f, -1.2f, -1.03f, -0.87f, -0.73999999999999999f, -0.62f, -0.51000000000000001f, -0.40000000000000002f, -0.29999999999999999f, -0.20000000000000001f, -0.10000000000000001f, 0.0f, 0.089999999999999997f, 0.19f, 0.28999999999999998f, 0.39000000000000001f, 0.5f, 0.60999999999999999f, 0.72999999999999998f, 0.85999999999999999f, 1.02f, 1.1899999999999999f, 1.4199999999999999f, 1.76f };
		static double ad27[] = { (-1.0f / 0.0001f), -1.79f, -1.45f, -1.23f, -1.05f, -0.90000000000000002f, -0.77000000000000002f, -0.65000000000000002f, -0.54000000000000004f, -0.44f, -0.34000000000000002f, -0.23999999999999999f, -0.14000000000000001f, -0.050000000000000003f, 0.040000000000000001f, 0.13f, 0.23000000000000001f, 0.33000000000000002f, 0.42999999999999999f, 0.53000000000000003f, 0.64000000000000001f, 0.76000000000000001f, 0.89000000000000001f, 1.04f, 1.22f, 1.4399999999999999f, 1.78f };
		static double ad28[] = { (-1.0f / 0.0001f), -1.8100000000000001f, -1.47f, -1.25f, -1.0700000000000001f, -0.93000000000000005f, -0.80000000000000004f, -0.68000000000000005f, -0.56999999999999995f, -0.46999999999999997f, -0.37f, -0.28000000000000003f, -0.19f, -0.089999999999999997f, -0.01f, 0.080000000000000002f, 0.17999999999999999f, 0.27000000000000002f, 0.35999999999999999f, 0.46000000000000002f, 0.56000000000000005f, 0.67000000000000004f, 0.79000000000000004f, 0.92000000000000004f, 1.0600000000000001f, 1.24f, 1.46f, 1.8f };
		static double ad29[] = { (-1.0f / 0.0001f), -1.8200000000000001f, -1.49f, -1.27f, -1.0900000000000001f, -0.94999999999999996f, -0.81999999999999995f, -0.70999999999999996f, -0.59999999999999998f, -0.5f, -0.40000000000000002f, -0.31f, -0.22f, -0.14000000000000001f, -0.050000000000000003f, 0.040000000000000001f, 0.13f, 0.20999999999999999f, 0.29999999999999999f, 0.39000000000000001f, 0.48999999999999999f, 0.58999999999999997f, 0.69999999999999996f, 0.81000000000000005f, 0.93999999999999995f, 1.0800000000000001f, 1.26f, 1.48f, 1.8100000000000001f };
		static double ad30[] = { (-1.0f / 0.0001f), -1.8400000000000001f, -1.51f, -1.29f, -1.1200000000000001f, -0.96999999999999997f, -0.84999999999999998f, -0.72999999999999998f, -0.63f, -0.53000000000000003f, -0.44f, -0.34999999999999998f, -0.26000000000000001f, -0.17000000000000001f, -0.089999999999999997f, 0.0f, 0.080000000000000002f, 0.16f, 0.25f, 0.34000000000000002f, 0.42999999999999999f, 0.52000000000000002f, 0.62f, 0.71999999999999997f, 0.83999999999999997f, 0.95999999999999996f, 1.1100000000000001f, 1.28f, 1.5f, 1.8300000000000001f };
		static double ad31[] = { (-1.0f / 0.0001f), -1.8500000000000001f, -1.52f, -1.3100000000000001f, -1.1399999999999999f, -0.98999999999999999f, -0.87f, -0.76000000000000001f, -0.65000000000000002f, -0.56000000000000005f, -0.46999999999999997f, -0.38f, -0.28999999999999998f, -0.20999999999999999f, -0.13f, -0.050000000000000003f, 0.040000000000000001f, 0.12f, 0.20000000000000001f, 0.28000000000000003f, 0.37f, 0.46000000000000002f, 0.55000000000000004f, 0.64000000000000001f, 0.75f, 0.85999999999999999f, 0.97999999999999998f, 1.1299999999999999f, 1.3f, 1.51f, 1.8400000000000001f };
		static double ad32[] = { (-1.0f / 0.0001f), -1.8700000000000001f, -1.54f, -1.3200000000000001f, -1.1599999999999999f, -1.01f, -0.89000000000000001f, -0.78000000000000003f, -0.68000000000000005f, -0.57999999999999996f, -0.48999999999999999f, -0.40999999999999998f, -0.32000000000000001f, -0.23999999999999999f, -0.16f, -0.080000000000000002f, 0.0f, 0.070000000000000007f, 0.14999999999999999f, 0.23000000000000001f, 0.31f, 0.40000000000000002f, 0.47999999999999998f, 0.56999999999999995f, 0.67000000000000004f, 0.77000000000000002f, 0.88f, 1.01f, 1.1499999999999999f, 1.3100000000000001f, 1.53f, 1.8600000000000001f };
		static double ad33[] = { (-1.0f / 0.0001f), -1.8799999999999999f, -1.55f, -1.3400000000000001f, -1.1699999999999999f, -1.03f, -0.91000000000000003f, -0.80000000000000004f, -0.69999999999999996f, -0.60999999999999999f, -0.52000000000000002f, -0.44f, -0.34999999999999998f, -0.27000000000000002f, -0.20000000000000001f, -0.12f, -0.040000000000000001f, 0.029999999999999999f, 0.11f, 0.19f, 0.26000000000000001f, 0.34000000000000002f, 0.42999999999999999f, 0.51000000000000001f, 0.59999999999999998f, 0.68999999999999995f, 0.79000000000000004f, 0.90000000000000002f, 1.02f, 1.1599999999999999f, 1.3300000000000001f, 1.54f, 1.8700000000000001f };
		static double ad34[] = { (-1.0f / 0.0001f), -1.8899999999999999f, -1.5700000000000001f, -1.3600000000000001f, -1.1899999999999999f, -1.05f, -0.93000000000000005f, -0.82999999999999996f, -0.72999999999999998f, -0.63f, -0.55000000000000004f, -0.46000000000000002f, -0.38f, -0.29999999999999999f, -0.23000000000000001f, -0.14999999999999999f, -0.080000000000000002f, -0.01f, 0.070000000000000007f, 0.14000000000000001f, 0.22f, 0.28999999999999998f, 0.37f, 0.45000000000000001f, 0.54000000000000004f, 0.62f, 0.71999999999999997f, 0.81999999999999995f, 0.92000000000000004f, 1.04f, 1.1799999999999999f, 1.3500000000000001f, 1.5600000000000001f, 1.8799999999999999f };
		static double ad35[] = { (-1.0f / 0.0001f), -1.9099999999999999f, -1.5800000000000001f, -1.3700000000000001f, -1.21f, -1.0700000000000001f, -0.94999999999999996f, -0.84999999999999998f, -0.75f, -0.66000000000000003f, -0.56999999999999995f, -0.48999999999999999f, -0.40999999999999998f, -0.33000000000000002f, -0.26000000000000001f, -0.19f, -0.11f, -0.040000000000000001f, 0.029999999999999999f, 0.10000000000000001f, 0.17999999999999999f, 0.25f, 0.32000000000000001f, 0.40000000000000002f, 0.47999999999999998f, 0.56000000000000005f, 0.65000000000000002f, 0.73999999999999999f, 0.83999999999999997f, 0.93999999999999995f, 1.0600000000000001f, 1.2f, 1.3600000000000001f, 1.5700000000000001f, 1.8999999999999999f };
		static double ad36[] = { (-1.0f / 0.0001f), -1.9199999999999999f, -1.6000000000000001f, -1.3899999999999999f, -1.23f, -1.0900000000000001f, -0.96999999999999997f, -0.87f, -0.77000000000000002f, -0.68000000000000005f, -0.58999999999999997f, -0.51000000000000001f, -0.44f, -0.35999999999999999f, -0.28999999999999998f, -0.22f, -0.14000000000000001f, -0.070000000000000007f, 0.0f, 0.059999999999999998f, 0.13f, 0.20999999999999999f, 0.28000000000000003f, 0.34999999999999998f, 0.42999999999999999f, 0.5f, 0.57999999999999996f, 0.67000000000000004f, 0.76000000000000001f, 0.85999999999999999f, 0.95999999999999996f, 1.0800000000000001f, 1.22f, 1.3799999999999999f, 1.5900000000000001f, 1.9099999999999999f };
		static double ad37[] = { (-1.0f / 0.0001f), -1.9299999999999999f, -1.6100000000000001f, -1.3999999999999999f, -1.24f, -1.1100000000000001f, -0.98999999999999999f, -0.89000000000000001f, -0.79000000000000004f, -0.69999999999999996f, -0.62f, -0.54000000000000004f, -0.46000000000000002f, -0.39000000000000001f, -0.31f, -0.23999999999999999f, -0.17999999999999999f, -0.11f, -0.040000000000000001f, 0.029999999999999999f, 0.10000000000000001f, 0.17000000000000001f, 0.23000000000000001f, 0.29999999999999999f, 0.38f, 0.45000000000000001f, 0.53000000000000003f, 0.60999999999999999f, 0.68999999999999995f, 0.78000000000000003f, 0.88f, 0.97999999999999998f, 1.1000000000000001f, 1.23f, 1.3899999999999999f, 1.6000000000000001f, 1.9199999999999999f };
		static double ad38[] = { (-1.0f / 0.0001f), -1.9399999999999999f, -1.6200000000000001f, -1.4199999999999999f, -1.26f, -1.1200000000000001f, -1.01f, -0.90000000000000002f, -0.81000000000000005f, -0.71999999999999997f, -0.64000000000000001f, -0.56000000000000005f, -0.47999999999999998f, -0.40999999999999998f, -0.34000000000000002f, -0.27000000000000002f, -0.20000000000000001f, -0.14000000000000001f, -0.070000000000000007f, 0.0f, 0.059999999999999998f, 0.13f, 0.19f, 0.26000000000000001f, 0.33000000000000002f, 0.40000000000000002f, 0.46999999999999997f, 0.55000000000000004f, 0.63f, 0.70999999999999996f, 0.80000000000000004f, 0.89000000000000001f, 1.0f, 1.1100000000000001f, 1.25f, 1.4099999999999999f, 1.6100000000000001f, 1.9299999999999999f };
		static double ad39[] = { (-1.0f / 0.0001f), -1.95f, -1.6399999999999999f, -1.4299999999999999f, -1.27f, -1.1399999999999999f, -1.03f, -0.92000000000000004f, -0.82999999999999996f, -0.73999999999999999f, -0.66000000000000003f, -0.57999999999999996f, -0.51000000000000001f, -0.44f, -0.37f, -0.29999999999999999f, -0.23000000000000001f, -0.17000000000000001f, -0.10000000000000001f, -0.040000000000000001f, 0.029999999999999999f, 0.089999999999999997f, 0.16f, 0.22f, 0.28999999999999998f, 0.35999999999999999f, 0.42999999999999999f, 0.5f, 0.56999999999999995f, 0.65000000000000002f, 0.72999999999999998f, 0.81999999999999995f, 0.91000000000000003f, 1.02f, 1.1299999999999999f, 1.26f, 1.4199999999999999f, 1.6299999999999999f, 1.9399999999999999f };
		static double ad40[] = { (-1.0f / 0.0001f), -1.96f, -1.6499999999999999f, -1.4399999999999999f, -1.29f, -1.1599999999999999f, -1.04f, -0.93999999999999995f, -0.84999999999999998f, -0.76000000000000001f, -0.68000000000000005f, -0.59999999999999998f, -0.53000000000000003f, -0.46000000000000002f, -0.39000000000000001f, -0.32000000000000001f, -0.26000000000000001f, -0.19f, -0.13f, -0.070000000000000007f, 0.0f, 0.059999999999999998f, 0.12f, 0.17999999999999999f, 0.25f, 0.31f, 0.38f, 0.45000000000000001f, 0.52000000000000002f, 0.58999999999999997f, 0.67000000000000004f, 0.75f, 0.83999999999999997f, 0.93000000000000005f, 1.03f, 1.1499999999999999f, 1.28f, 1.4299999999999999f, 1.6399999999999999f, 1.96f };
		static double ad41[] = { (-1.0f / 0.0001f), -1.98f, -1.6599999999999999f, -1.46f, -1.3f, -1.1699999999999999f, -1.0600000000000001f, -0.95999999999999996f, -0.85999999999999999f, -0.78000000000000003f, -0.69999999999999996f, -0.62f, -0.55000000000000004f, -0.47999999999999998f, -0.40999999999999998f, -0.34999999999999998f, -0.28000000000000003f, -0.22f, -0.16f, -0.10000000000000001f, -0.040000000000000001f, 0.029999999999999999f, 0.089999999999999997f, 0.14999999999999999f, 0.20999999999999999f, 0.27000000000000002f, 0.34000000000000002f, 0.40000000000000002f, 0.46999999999999997f, 0.54000000000000004f, 0.60999999999999999f, 0.68999999999999995f, 0.77000000000000002f, 0.84999999999999998f, 0.94999999999999996f, 1.05f, 1.1599999999999999f, 1.29f, 1.45f, 1.6499999999999999f, 1.97f };
		static double ad42[] = { (-1.0f / 0.0001f), -1.99f, -1.6699999999999999f, -1.47f, -1.3100000000000001f, -1.1799999999999999f, -1.0700000000000001f, -0.96999999999999997f, -0.88f, -0.80000000000000004f, -0.71999999999999997f, -0.64000000000000001f, -0.56999999999999995f, -0.5f, -0.44f, -0.37f, -0.31f, -0.25f, -0.19f, -0.12f, -0.059999999999999998f, -0.01f, 0.050000000000000003f, 0.11f, 0.17999999999999999f, 0.23999999999999999f, 0.29999999999999999f, 0.35999999999999999f, 0.42999999999999999f, 0.48999999999999999f, 0.56000000000000005f, 0.63f, 0.70999999999999996f, 0.79000000000000004f, 0.87f, 0.95999999999999996f, 1.0600000000000001f, 1.1699999999999999f, 1.3f, 1.46f, 1.6599999999999999f, 1.98f };
		static double ad43[] = { (-1.0f / 0.0001f), -2.0f, -1.6799999999999999f, -1.48f, -1.3300000000000001f, -1.2f, -1.0900000000000001f, -0.98999999999999999f, -0.90000000000000002f, -0.81000000000000005f, -0.73999999999999999f, -0.66000000000000003f, -0.58999999999999997f, -0.52000000000000002f, -0.46000000000000002f, -0.39000000000000001f, -0.33000000000000002f, -0.27000000000000002f, -0.20999999999999999f, -0.14999999999999999f, -0.089999999999999997f, -0.029999999999999999f, 0.02f, 0.080000000000000002f, 0.14000000000000001f, 0.20000000000000001f, 0.26000000000000001f, 0.32000000000000001f, 0.38f, 0.45000000000000001f, 0.51000000000000001f, 0.57999999999999996f, 0.65000000000000002f, 0.72999999999999998f, 0.80000000000000004f, 0.89000000000000001f, 0.97999999999999998f, 1.0800000000000001f, 1.1899999999999999f, 1.3200000000000001f, 1.47f, 1.6699999999999999f, 1.99f };
		static double ad44[] = { (-1.0f / 0.0001f), -2.0099999999999998f, -1.7f, -1.49f, -1.3400000000000001f, -1.21f, -1.1000000000000001f, -1.0f, -0.91000000000000003f, -0.82999999999999996f, -0.75f, -0.68000000000000005f, -0.60999999999999999f, -0.54000000000000004f, -0.47999999999999998f, -0.40999999999999998f, -0.34999999999999998f, -0.28999999999999998f, -0.23000000000000001f, -0.17999999999999999f, -0.12f, -0.059999999999999998f, 0.0f, 0.050000000000000003f, 0.11f, 0.17000000000000001f, 0.22f, 0.28000000000000003f, 0.34000000000000002f, 0.40000000000000002f, 0.46999999999999997f, 0.53000000000000003f, 0.59999999999999998f, 0.67000000000000004f, 0.73999999999999999f, 0.81999999999999995f, 0.90000000000000002f, 0.98999999999999999f, 1.0900000000000001f, 1.2f, 1.3300000000000001f, 1.48f, 1.6899999999999999f, 2.0f };
		static double ad45[] = { (-1.0f / 0.0001f), -2.0099999999999998f, -1.71f, -1.51f, -1.3500000000000001f, -1.23f, -1.1200000000000001f, -1.02f, -0.93000000000000005f, -0.84999999999999998f, -0.77000000000000002f, -0.69999999999999996f, -0.63f, -0.56000000000000005f, -0.5f, -0.44f, -0.38f, -0.32000000000000001f, -0.26000000000000001f, -0.20000000000000001f, -0.14000000000000001f, -0.089999999999999997f, -0.029999999999999999f, 0.02f, 0.080000000000000002f, 0.13f, 0.19f, 0.25f, 0.31f, 0.37f, 0.42999999999999999f, 0.48999999999999999f, 0.55000000000000004f, 0.62f, 0.68999999999999995f, 0.76000000000000001f, 0.83999999999999997f, 0.92000000000000004f, 1.01f, 1.1100000000000001f, 1.22f, 1.3400000000000001f, 1.5f, 1.7f, 2.0f };
		static double ad46[] = { (-1.0f / 0.0001f), -2.02f, -1.72f, -1.52f, -1.3600000000000001f, -1.24f, -1.1299999999999999f, -1.03f, -0.93999999999999995f, -0.85999999999999999f, -0.79000000000000004f, -0.70999999999999996f, -0.65000000000000002f, -0.57999999999999996f, -0.52000000000000002f, -0.46000000000000002f, -0.40000000000000002f, -0.34000000000000002f, -0.28000000000000003f, -0.22f, -0.17000000000000001f, -0.11f, -0.059999999999999998f, -0.01f, 0.050000000000000003f, 0.10000000000000001f, 0.16f, 0.20999999999999999f, 0.27000000000000002f, 0.33000000000000002f, 0.39000000000000001f, 0.45000000000000001f, 0.51000000000000001f, 0.56999999999999995f, 0.64000000000000001f, 0.69999999999999996f, 0.78000000000000003f, 0.84999999999999998f, 0.93000000000000005f, 1.02f, 1.1200000000000001f, 1.23f, 1.3500000000000001f, 1.51f, 1.71f, 2.0099999999999998f };
		static double ad47[] = { (-1.0f / 0.0001f), -2.0299999999999998f, -1.73f, -1.53f, -1.3799999999999999f, -1.25f, -1.1399999999999999f, -1.05f, -0.95999999999999996f, -0.88f, -0.80000000000000004f, -0.72999999999999998f, -0.66000000000000003f, -0.59999999999999998f, -0.54000000000000004f, -0.47999999999999998f, -0.41999999999999998f, -0.35999999999999999f, -0.29999999999999999f, -0.25f, -0.19f, -0.14000000000000001f, -0.089999999999999997f, -0.029999999999999999f, 0.02f, 0.080000000000000002f, 0.13f, 0.17999999999999999f, 0.23999999999999999f, 0.28999999999999998f, 0.34999999999999998f, 0.40999999999999998f, 0.46999999999999997f, 0.53000000000000003f, 0.58999999999999997f, 0.65000000000000002f, 0.71999999999999997f, 0.79000000000000004f, 0.87f, 0.94999999999999996f, 1.04f, 1.1299999999999999f, 1.24f, 1.3700000000000001f, 1.52f, 1.72f, 2.02f };
		static double ad48[] = { (-1.0f / 0.0001f), -2.04f, -1.74f, -1.54f, -1.3899999999999999f, -1.26f, -1.1599999999999999f, -1.0600000000000001f, -0.96999999999999997f, -0.89000000000000001f, -0.81999999999999995f, -0.75f, -0.68000000000000005f, -0.62f, -0.55000000000000004f, -0.48999999999999999f, -0.44f, -0.38f, -0.32000000000000001f, -0.27000000000000002f, -0.22f, -0.16f, -0.11f, -0.059999999999999998f, 0.0f, 0.050000000000000003f, 0.10000000000000001f, 0.14999999999999999f, 0.20999999999999999f, 0.26000000000000001f, 0.31f, 0.37f, 0.42999999999999999f, 0.47999999999999998f, 0.54000000000000004f, 0.60999999999999999f, 0.67000000000000004f, 0.73999999999999999f, 0.81000000000000005f, 0.88f, 0.95999999999999996f, 1.05f, 1.1499999999999999f, 1.25f, 1.3799999999999999f, 1.53f, 1.73f, 2.0299999999999998f };
		static double ad49[] = { (-1.0f / 0.0001f), -2.0499999999999998f, -1.75f, -1.55f, -1.3999999999999999f, -1.27f, -1.1699999999999999f, -1.0700000000000001f, -0.98999999999999999f, -0.91000000000000003f, -0.82999999999999996f, -0.76000000000000001f, -0.69999999999999996f, -0.63f, -0.56999999999999995f, -0.51000000000000001f, -0.45000000000000001f, -0.40000000000000002f, -0.34000000000000002f, -0.28999999999999998f, -0.23999999999999999f, -0.19f, -0.13f, -0.080000000000000002f, -0.029999999999999999f, 0.02f, 0.070000000000000007f, 0.12f, 0.17999999999999999f, 0.23000000000000001f, 0.28000000000000003f, 0.33000000000000002f, 0.39000000000000001f, 0.44f, 0.5f, 0.56000000000000005f, 0.62f, 0.68999999999999995f, 0.75f, 0.81999999999999995f, 0.90000000000000002f, 0.97999999999999998f, 1.0600000000000001f, 1.1599999999999999f, 1.26f, 1.3899999999999999f, 1.54f, 1.74f, 2.04f };
		static double ad50[] = { (-1.0f / 0.0001f), -2.0600000000000001f, -1.76f, -1.5600000000000001f, -1.4099999999999999f, -1.29f, -1.1799999999999999f, -1.0900000000000001f, -1.0f, -0.92000000000000004f, -0.84999999999999998f, -0.78000000000000003f, -0.70999999999999996f, -0.65000000000000002f, -0.58999999999999997f, -0.53000000000000003f, -0.46999999999999997f, -0.41999999999999998f, -0.35999999999999999f, -0.31f, -0.26000000000000001f, -0.20999999999999999f, -0.16f, -0.11f, -0.059999999999999998f, 0.0f, 0.050000000000000003f, 0.10000000000000001f, 0.14999999999999999f, 0.20000000000000001f, 0.25f, 0.29999999999999999f, 0.34999999999999998f, 0.40999999999999998f, 0.46000000000000002f, 0.52000000000000002f, 0.57999999999999996f, 0.64000000000000001f, 0.69999999999999996f, 0.77000000000000002f, 0.83999999999999997f, 0.91000000000000003f, 0.98999999999999999f, 1.0800000000000001f, 1.1699999999999999f, 1.28f, 1.3999999999999999f, 1.55f, 1.75f, 2.0499999999999998f };
		static double ad51[] = { (-1.0f / 0.0001f), -2.0699999999999998f, -1.76f, -1.5700000000000001f, -1.4199999999999999f, -1.3f, -1.1899999999999999f, -1.1000000000000001f, -1.01f, -0.93000000000000005f, -0.85999999999999999f, -0.79000000000000004f, -0.72999999999999998f, -0.66000000000000003f, -0.59999999999999998f, -0.55000000000000004f, -0.48999999999999999f, -0.44f, -0.38f, -0.33000000000000002f, -0.28000000000000003f, -0.23000000000000001f, -0.17999999999999999f, -0.13f, -0.080000000000000002f, -0.029999999999999999f, 0.02f, 0.070000000000000007f, 0.12f, 0.17000000000000001f, 0.22f, 0.27000000000000002f, 0.32000000000000001f, 0.37f, 0.42999999999999999f, 0.47999999999999998f, 0.54000000000000004f, 0.58999999999999997f, 0.65000000000000002f, 0.71999999999999997f, 0.78000000000000003f, 0.84999999999999998f, 0.92000000000000004f, 1.0f, 1.0900000000000001f, 1.1799999999999999f, 1.29f, 1.4099999999999999f, 1.5600000000000001f, 1.75f, 2.0600000000000001f };
		static double ad52[] = { (-1.0f / 0.0001f), -2.0699999999999998f, -1.77f, -1.5800000000000001f, -1.4299999999999999f, -1.3100000000000001f, -1.2f, -1.1100000000000001f, -1.03f, -0.94999999999999996f, -0.87f, -0.81000000000000005f, -0.73999999999999999f, -0.68000000000000005f, -0.62f, -0.56000000000000005f, -0.51000000000000001f, -0.45000000000000001f, -0.40000000000000002f, -0.34999999999999998f, -0.29999999999999999f, -0.25f, -0.20000000000000001f, -0.14999999999999999f, -0.10000000000000001f, -0.050000000000000003f, -0.01f, 0.040000000000000001f, 0.089999999999999997f, 0.14000000000000001f, 0.19f, 0.23999999999999999f, 0.28999999999999998f, 0.34000000000000002f, 0.39000000000000001f, 0.44f, 0.5f, 0.55000000000000004f, 0.60999999999999999f, 0.67000000000000004f, 0.72999999999999998f, 0.80000000000000004f, 0.85999999999999999f, 0.93999999999999995f, 1.02f, 1.1000000000000001f, 1.1899999999999999f, 1.3f, 1.4199999999999999f, 1.5700000000000001f, 1.76f, 2.0600000000000001f };
		static double ad53[] = { (-1.0f / 0.0001f), -2.0800000000000001f, -1.78f, -1.5900000000000001f, -1.4399999999999999f, -1.3200000000000001f, -1.21f, -1.1200000000000001f, -1.04f, -0.95999999999999996f, -0.89000000000000001f, -0.81999999999999995f, -0.76000000000000001f, -0.68999999999999995f, -0.64000000000000001f, -0.57999999999999996f, -0.52000000000000002f, -0.46999999999999997f, -0.41999999999999998f, -0.37f, -0.32000000000000001f, -0.27000000000000002f, -0.22f, -0.17000000000000001f, -0.12f, -0.080000000000000002f, -0.029999999999999999f, 0.02f, 0.070000000000000007f, 0.11f, 0.16f, 0.20999999999999999f, 0.26000000000000001f, 0.31f, 0.35999999999999999f, 0.40999999999999998f, 0.46000000000000002f, 0.51000000000000001f, 0.56999999999999995f, 0.63f, 0.68000000000000005f, 0.75f, 0.81000000000000005f, 0.88f, 0.94999999999999996f, 1.03f, 1.1100000000000001f, 1.2f, 1.3100000000000001f, 1.4299999999999999f, 1.5800000000000001f, 1.77f, 2.0699999999999998f };
		static double ad54[] = { (-1.0f / 0.0001f), -2.0899999999999999f, -1.79f, -1.6000000000000001f, -1.45f, -1.3300000000000001f, -1.23f, -1.1299999999999999f, -1.05f, -0.96999999999999997f, -0.90000000000000002f, -0.82999999999999996f, -0.77000000000000002f, -0.70999999999999996f, -0.65000000000000002f, -0.58999999999999997f, -0.54000000000000004f, -0.48999999999999999f, -0.44f, -0.39000000000000001f, -0.34000000000000002f, -0.28999999999999998f, -0.23999999999999999f, -0.19f, -0.14000000000000001f, -0.10000000000000001f, -0.050000000000000003f, 0.0f, 0.040000000000000001f, 0.089999999999999997f, 0.13f, 0.17999999999999999f, 0.23000000000000001f, 0.28000000000000003f, 0.33000000000000002f, 0.38f, 0.42999999999999999f, 0.47999999999999998f, 0.53000000000000003f, 0.57999999999999996f, 0.64000000000000001f, 0.69999999999999996f, 0.76000000000000001f, 0.81999999999999995f, 0.89000000000000001f, 0.95999999999999996f, 1.04f, 1.1200000000000001f, 1.22f, 1.3200000000000001f, 1.4399999999999999f, 1.5900000000000001f, 1.78f, 2.0800000000000001f };
		static double ad55[] = { (-1.0f / 0.0001f), -2.1000000000000001f, -1.8f, -1.6100000000000001f, -1.46f, -1.3400000000000001f, -1.24f, -1.1399999999999999f, -1.0600000000000001f, -0.97999999999999998f, -0.91000000000000003f, -0.84999999999999998f, -0.78000000000000003f, -0.71999999999999997f, -0.67000000000000004f, -0.60999999999999999f, -0.56000000000000005f, -0.5f, -0.45000000000000001f, -0.40000000000000002f, -0.34999999999999998f, -0.31f, -0.26000000000000001f, -0.20999999999999999f, -0.17000000000000001f, -0.12f, -0.070000000000000007f, -0.029999999999999999f, 0.02f, 0.059999999999999998f, 0.11f, 0.16f, 0.20000000000000001f, 0.25f, 0.29999999999999999f, 0.34000000000000002f, 0.39000000000000001f, 0.44f, 0.48999999999999999f, 0.55000000000000004f, 0.59999999999999998f, 0.66000000000000003f, 0.70999999999999996f, 0.77000000000000002f, 0.83999999999999997f, 0.90000000000000002f, 0.96999999999999997f, 1.05f, 1.1299999999999999f, 1.23f, 1.3300000000000001f, 1.45f, 1.6000000000000001f, 1.79f, 2.0899999999999999f };
		static double ad56[] = { (-1.0f / 0.0001f), -2.1099999999999999f, -1.8100000000000001f, -1.6200000000000001f, -1.47f, -1.3500000000000001f, -1.25f, -1.1599999999999999f, -1.0700000000000001f, -1.0f, -0.93000000000000005f, -0.85999999999999999f, -0.80000000000000004f, -0.73999999999999999f, -0.68000000000000005f, -0.62f, -0.56999999999999995f, -0.52000000000000002f, -0.46999999999999997f, -0.41999999999999998f, -0.37f, -0.32000000000000001f, -0.28000000000000003f, -0.23000000000000001f, -0.19f, -0.14000000000000001f, -0.089999999999999997f, -0.050000000000000003f, -0.01f, 0.040000000000000001f, 0.080000000000000002f, 0.13f, 0.17999999999999999f, 0.22f, 0.27000000000000002f, 0.31f, 0.35999999999999999f, 0.40999999999999998f, 0.46000000000000002f, 0.51000000000000001f, 0.56000000000000005f, 0.60999999999999999f, 0.67000000000000004f, 0.72999999999999998f, 0.79000000000000004f, 0.84999999999999998f, 0.92000000000000004f, 0.98999999999999999f, 1.0600000000000001f, 1.1499999999999999f, 1.24f, 1.3400000000000001f, 1.46f, 1.6100000000000001f, 1.8f, 2.1000000000000001f };
		static double ad57[] = { (-1.0f / 0.0001f), -2.1099999999999999f, -1.8200000000000001f, -1.6200000000000001f, -1.48f, -1.3600000000000001f, -1.26f, -1.1699999999999999f, -1.0800000000000001f, -1.01f, -0.93999999999999995f, -0.87f, -0.81000000000000005f, -0.75f, -0.68999999999999995f, -0.64000000000000001f, -0.58999999999999997f, -0.53000000000000003f, -0.47999999999999998f, -0.44f, -0.39000000000000001f, -0.34000000000000002f, -0.28999999999999998f, -0.25f, -0.20000000000000001f, -0.16f, -0.12f, -0.070000000000000007f, -0.029999999999999999f, 0.02f, 0.059999999999999998f, 0.11f, 0.14999999999999999f, 0.19f, 0.23999999999999999f, 0.28000000000000003f, 0.33000000000000002f, 0.38f, 0.42999999999999999f, 0.46999999999999997f, 0.52000000000000002f, 0.57999999999999996f, 0.63f, 0.68000000000000005f, 0.73999999999999999f, 0.80000000000000004f, 0.85999999999999999f, 0.93000000000000005f, 1.0f, 1.0700000000000001f, 1.1599999999999999f, 1.25f, 1.3500000000000001f, 1.47f, 1.6100000000000001f, 1.8100000000000001f, 2.1000000000000001f };
		static double ad58[] = { (-1.0f / 0.0001f), -2.1200000000000001f, -1.8200000000000001f, -1.6299999999999999f, -1.49f, -1.3700000000000001f, -1.27f, -1.1799999999999999f, -1.0900000000000001f, -1.02f, -0.94999999999999996f, -0.88f, -0.81999999999999995f, -0.76000000000000001f, -0.70999999999999996f, -0.65000000000000002f, -0.59999999999999998f, -0.55000000000000004f, -0.5f, -0.45000000000000001f, -0.40000000000000002f, -0.35999999999999999f, -0.31f, -0.27000000000000002f, -0.22f, -0.17999999999999999f, -0.14000000000000001f, -0.089999999999999997f, -0.050000000000000003f, 0.0f, 0.040000000000000001f, 0.080000000000000002f, 0.13f, 0.17000000000000001f, 0.20999999999999999f, 0.26000000000000001f, 0.29999999999999999f, 0.34999999999999998f, 0.39000000000000001f, 0.44f, 0.48999999999999999f, 0.54000000000000004f, 0.58999999999999997f, 0.64000000000000001f, 0.69999999999999996f, 0.75f, 0.81000000000000005f, 0.87f, 0.93999999999999995f, 1.01f, 1.0800000000000001f, 1.1699999999999999f, 1.26f, 1.3600000000000001f, 1.48f, 1.6200000000000001f, 1.8100000000000001f, 2.1099999999999999f };
		static double ad59[] = { (-1.0f / 0.0001f), -2.1299999999999999f, -1.8300000000000001f, -1.6399999999999999f, -1.5f, -1.3799999999999999f, -1.28f, -1.1899999999999999f, -1.1100000000000001f, -1.03f, -0.95999999999999996f, -0.90000000000000002f, -0.82999999999999996f, -0.78000000000000003f, -0.71999999999999997f, -0.67000000000000004f, -0.60999999999999999f, -0.56000000000000005f, -0.51000000000000001f, -0.46999999999999997f, -0.41999999999999998f, -0.37f, -0.33000000000000002f, -0.28000000000000003f, -0.23999999999999999f, -0.20000000000000001f, -0.14999999999999999f, -0.11f, -0.070000000000000007f, -0.029999999999999999f, 0.02f, 0.059999999999999998f, 0.10000000000000001f, 0.14000000000000001f, 0.19f, 0.23000000000000001f, 0.27000000000000002f, 0.32000000000000001f, 0.35999999999999999f, 0.40999999999999998f, 0.46000000000000002f, 0.5f, 0.55000000000000004f, 0.59999999999999998f, 0.66000000000000003f, 0.70999999999999996f, 0.77000000000000002f, 0.81999999999999995f, 0.89000000000000001f, 0.94999999999999996f, 1.02f, 1.1000000000000001f, 1.1799999999999999f, 1.27f, 1.3700000000000001f, 1.49f, 1.6299999999999999f, 1.8200000000000001f, 2.1200000000000001f };
		static double ad60[] = { (-1.0f / 0.0001f), -2.1299999999999999f, -1.8400000000000001f, -1.6499999999999999f, -1.51f, -1.3899999999999999f, -1.29f, -1.2f, -1.1200000000000001f, -1.04f, -0.96999999999999997f, -0.91000000000000003f, -0.84999999999999998f, -0.79000000000000004f, -0.72999999999999998f, -0.68000000000000005f, -0.63f, -0.57999999999999996f, -0.53000000000000003f, -0.47999999999999998f, -0.44f, -0.39000000000000001f, -0.34999999999999998f, -0.29999999999999999f, -0.26000000000000001f, -0.22f, -0.17000000000000001f, -0.13f, -0.089999999999999997f, -0.050000000000000003f, -0.01f, 0.040000000000000001f, 0.080000000000000002f, 0.12f, 0.16f, 0.20999999999999999f, 0.25f, 0.28999999999999998f, 0.34000000000000002f, 0.38f, 0.42999999999999999f, 0.46999999999999997f, 0.52000000000000002f, 0.56999999999999995f, 0.62f, 0.67000000000000004f, 0.71999999999999997f, 0.78000000000000003f, 0.83999999999999997f, 0.90000000000000002f, 0.95999999999999996f, 1.03f, 1.1100000000000001f, 1.1899999999999999f, 1.28f, 1.3799999999999999f, 1.5f, 1.6399999999999999f, 1.8300000000000001f, 2.1200000000000001f };
		static double ad61[] = { (-1.0f / 0.0001f), -2.1400000000000001f, -1.8500000000000001f, -1.6599999999999999f, -1.51f, -1.3999999999999999f, -1.3f, -1.21f, -1.1299999999999999f, -1.05f, -0.97999999999999998f, -0.92000000000000004f, -0.85999999999999999f, -0.80000000000000004f, -0.75f, -0.68999999999999995f, -0.64000000000000001f, -0.58999999999999997f, -0.54000000000000004f, -0.5f, -0.45000000000000001f, -0.40999999999999998f, -0.35999999999999999f, -0.32000000000000001f, -0.28000000000000003f, -0.23000000000000001f, -0.19f, -0.14999999999999999f, -0.11f, -0.070000000000000007f, -0.029999999999999999f, 0.02f, 0.059999999999999998f, 0.10000000000000001f, 0.14000000000000001f, 0.17999999999999999f, 0.22f, 0.27000000000000002f, 0.31f, 0.34999999999999998f, 0.40000000000000002f, 0.44f, 0.48999999999999999f, 0.53000000000000003f, 0.57999999999999996f, 0.63f, 0.68000000000000005f, 0.73999999999999999f, 0.79000000000000004f, 0.84999999999999998f, 0.91000000000000003f, 0.96999999999999997f, 1.04f, 1.1200000000000001f, 1.2f, 1.29f, 1.3899999999999999f, 1.5f, 1.6499999999999999f, 1.8400000000000001f, 2.1299999999999999f };
		static double ad62[] = { (-1.0f / 0.0001f), -2.1499999999999999f, -1.8500000000000001f, -1.6699999999999999f, -1.52f, -1.4099999999999999f, -1.3100000000000001f, -1.22f, -1.1399999999999999f, -1.0600000000000001f, -0.98999999999999999f, -0.93000000000000005f, -0.87f, -0.81000000000000005f, -0.76000000000000001f, -0.70999999999999996f, -0.65000000000000002f, -0.60999999999999999f, -0.56000000000000005f, -0.51000000000000001f, -0.46999999999999997f, -0.41999999999999998f, -0.38f, -0.33000000000000002f, -0.28999999999999998f, -0.25f, -0.20999999999999999f, -0.17000000000000001f, -0.13f, -0.089999999999999997f, -0.050000000000000003f, -0.01f, 0.040000000000000001f, 0.080000000000000002f, 0.12f, 0.16f, 0.20000000000000001f, 0.23999999999999999f, 0.28000000000000003f, 0.32000000000000001f, 0.37f, 0.40999999999999998f, 0.46000000000000002f, 0.5f, 0.55000000000000004f, 0.59999999999999998f, 0.64000000000000001f, 0.69999999999999996f, 0.75f, 0.80000000000000004f, 0.85999999999999999f, 0.92000000000000004f, 0.97999999999999998f, 1.05f, 1.1299999999999999f, 1.21f, 1.3f, 1.3999999999999999f, 1.51f, 1.6599999999999999f, 1.8400000000000001f, 2.1400000000000001f };
		static double ad63[] = { (-1.0f / 0.0001f), -2.1499999999999999f, -1.8600000000000001f, -1.6699999999999999f, -1.53f, -1.4099999999999999f, -1.3100000000000001f, -1.23f, -1.1499999999999999f, -1.0700000000000001f, -1.0f, -0.93999999999999995f, -0.88f, -0.81999999999999995f, -0.77000000000000002f, -0.71999999999999997f, -0.67000000000000004f, -0.62f, -0.56999999999999995f, -0.52000000000000002f, -0.47999999999999998f, -0.44f, -0.39000000000000001f, -0.34999999999999998f, -0.31f, -0.27000000000000002f, -0.23000000000000001f, -0.19f, -0.14000000000000001f, -0.10000000000000001f, -0.059999999999999998f, -0.02f, 0.01f, 0.050000000000000003f, 0.089999999999999997f, 0.13f, 0.17999999999999999f, 0.22f, 0.26000000000000001f, 0.29999999999999999f, 0.34000000000000002f, 0.38f, 0.42999999999999999f, 0.46999999999999997f, 0.51000000000000001f, 0.56000000000000005f, 0.60999999999999999f, 0.66000000000000003f, 0.70999999999999996f, 0.76000000000000001f, 0.81000000000000005f, 0.87f, 0.93000000000000005f, 0.98999999999999999f, 1.0600000000000001f, 1.1399999999999999f, 1.22f, 1.3f, 1.3999999999999999f, 1.52f, 1.6599999999999999f, 1.8500000000000001f, 2.1400000000000001f };
		static double ad64[] = { (-1.0f / 0.0001f), -2.1600000000000001f, -1.8700000000000001f, -1.6799999999999999f, -1.54f, -1.4199999999999999f, -1.3200000000000001f, -1.23f, -1.1599999999999999f, -1.0800000000000001f, -1.01f, -0.94999999999999996f, -0.89000000000000001f, -0.83999999999999997f, -0.78000000000000003f, -0.72999999999999998f, -0.68000000000000005f, -0.63f, -0.57999999999999996f, -0.54000000000000004f, -0.48999999999999999f, -0.45000000000000001f, -0.40999999999999998f, -0.37f, -0.32000000000000001f, -0.28000000000000003f, -0.23999999999999999f, -0.20000000000000001f, -0.16f, -0.12f, -0.080000000000000002f, -0.040000000000000001f, 0.0f, 0.029999999999999999f, 0.070000000000000007f, 0.11f, 0.14999999999999999f, 0.19f, 0.23000000000000001f, 0.27000000000000002f, 0.31f, 0.35999999999999999f, 0.40000000000000002f, 0.44f, 0.47999999999999998f, 0.53000000000000003f, 0.56999999999999995f, 0.62f, 0.67000000000000004f, 0.71999999999999997f, 0.77000000000000002f, 0.82999999999999996f, 0.88f, 0.93999999999999995f, 1.01f, 1.0700000000000001f, 1.1499999999999999f, 1.22f, 1.3100000000000001f, 1.4099999999999999f, 1.53f, 1.6699999999999999f, 1.8600000000000001f, 2.1499999999999999f };


		switch (i) {
		case 2: // '\002'
			return init(ad, ad2, i);break;

		case 3: // '\003'
			return init(ad, ad3, i);break;

		case 4: // '\004'
			return init(ad, ad4, i);break;

		case 5: // '\005'
			return init(ad, ad5, i);break;

		case 6: // '\006'
			return init(ad, ad6, i);break;

		case 7: // '\007'
			return init(ad, ad7, i);break;

		case 8: // '\b'
			return init(ad, ad8, i);break;

		case 9: // '\t'
			return init(ad, ad9, i);break;

		case 10: // '\n'
			return init(ad, ad10, i);break;

		case 11: // '\013'
			return init(ad, ad11, i);break;

		case 12: // '\f'
			return init(ad, ad12, i);break;

		case 13: // '\r'
			return init(ad, ad13, i);break;

		case 14: // '\016'
			return init(ad, ad14, i);break;

		case 15: // '\017'
			return init(ad, ad15, i);break;

		case 16: // '\020'
			return init(ad, ad16, i);break;

		case 17: // '\021'
			return init(ad, ad17, i);break;

		case 18: // '\022'
			return init(ad, ad18, i);break;

		case 19: // '\023'
			return init(ad, ad19, i);break;

		case 20: // '\024'
			return init(ad, ad20, i);break;

		case 21: // '\025'
			return init(ad, ad21, i);break;

		case 22: // '\026'
			return init(ad, ad22, i);break;

		case 23: // '\027'
			return init(ad, ad23, i);break;

		case 24: // '\030'
			return init(ad, ad24, i);break;

		case 25: // '\031'
			return init(ad, ad25, i);break;

		case 26: // '\032'
			return init(ad, ad26, i);break;

		case 27: // '\033'
			return init(ad, ad27, i);break;

		case 28: // '\034'
			return init(ad, ad28, i);break;

		case 29: // '\035'
			return init(ad, ad29, i);break;

		case 30: // '\036'
			return init(ad, ad30, i);break;

		case 31: // '\037'
			return init(ad, ad31, i);break;

		case 32: // ' '
			return init(ad, ad32, i);break;

		case 33: // '!'
			return init(ad, ad33, i);break;

		case 34: // '"'
			return init(ad, ad34, i);break;

		case 35: // '#'
			return init(ad, ad35, i);break;

		case 36: // '$'
			return init(ad, ad36, i);break;

		case 37: // '%'
			return init(ad, ad37, i);break;

		case 38: // '&'
			return init(ad, ad38, i);break;

		case 39: // '\''
			return init(ad, ad39, i);break;

		case 40: // '('
			return init(ad, ad40, i);break;

		case 41: // ')'
			return init(ad, ad41, i);break;

		case 42: // '*'
			return init(ad, ad42, i);break;

		case 43: // '+'
			return init(ad, ad43, i);break;

		case 44: // ','
			return init(ad, ad44, i);break;

		case 45: // '-'
			return init(ad, ad45, i);break;

		case 46: // '.'
			return init(ad, ad46, i);break;

		case 47: // '/'
			return init(ad, ad47, i);break;

		case 48: // '0'
			return init(ad, ad48, i);break;

		case 49: // '1'
			return init(ad, ad49, i);break;

		case 50: // '2'
			return init(ad, ad50, i);break;

		case 51: // '3'
			return init(ad, ad51, i);break;

		case 52: // '4'
			return init(ad, ad52, i);break;

		case 53: // '5'
			return init(ad, ad53, i);break;

		case 54: // '6'
			return init(ad, ad54, i);break;

		case 55: // '7'
			return init(ad, ad55, i);break;

		case 56: // '8'
			return init(ad, ad56, i);break;

		case 57: // '9'
			return init(ad, ad57, i);break;

		case 58: // ':'
			return init(ad, ad58, i);break;

		case 59: // ';'
			return init(ad, ad59, i);break;

		case 60: // '<'
			return init(ad, ad60, i);break;

		case 61: // '='
			return init(ad, ad61, i);break;

		case 62: // '>'
			return init(ad, ad62, i);break;

		case 63: // '?'
			return init(ad, ad63, i);break;

		case 64: // '@'
			return init(ad, ad64, i);break;

		default:
			printf("Error! alphabet_size is too big");
		}
	}
};

